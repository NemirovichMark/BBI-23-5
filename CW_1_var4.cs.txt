using CW1;

namespace CW1
{
    struct Triangle
    {
        public double SideA { get; set; }
        public double SideB { get; set; }
        public double SideC { get; set; }

        public Triangle(double[] sides)
        {
            this.SideA = sides[0];
            this.SideB = sides[1];
            this.SideC = sides[2];
        }

        public string GetTriangleType()
        {
            if (SideA == SideB && SideB == SideC)
            {
                return "Равносторонний";
            }
            else if (SideA == SideB || SideA == SideC || SideB == SideC)
            {
                return "Равнобедренный";
            }
            else
            {
                return "Разносторонний";
            }
        }

        public double CalculateArea()
        {
            double p = (SideA + SideB + SideC) / 2;
            double area = Math.Sqrt(p * (p - SideA) * (p - SideB) * (p - SideC));
            return area;
        }

        public void PrintInfo()
        {
            Console.WriteLine("Сторона A: " + SideA);
            Console.WriteLine("Сторона B: " + SideB);
            Console.WriteLine("Сторона C: " + SideC);
            Console.WriteLine("Площадь треугольника: " + CalculateArea());
            Console.WriteLine("Тип треугольника: " + GetTriangleType());
            Console.WriteLine();
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            Triangle[] triangles = new Triangle[5];
            double[][] sides = new double[][]
            {
            new double[] {3, 4, 5},
            new double[] {7, 8, 9},
            new double[] {5, 5, 5},
            new double[] {5, 5, 6},
            new double[] {3, 4, 6}
            };

            for (int i = 0; i < 5; i++)
            {
                triangles[i] = new Triangle(sides[i]);
            }

            // Сортировка треугольников по убыванию площади
            for (int i = 0; i < triangles.Length - 1; i++)
            {
                for (int j = i + 1; j < triangles.Length; j++)
                {
                    if (triangles[i].CalculateArea() < triangles[j].CalculateArea())
                    {
                        Triangle temp = triangles[i];
                        triangles[i] = triangles[j];
                        triangles[j] = temp;
                    }
                }
            }

            Console.WriteLine("Информация о треугольниках:");
            foreach (Triangle triangle in triangles)
            {
                triangle.PrintInfo();
            }
        }
    }
}